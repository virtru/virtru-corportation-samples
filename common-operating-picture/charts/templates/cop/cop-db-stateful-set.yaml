apiVersion: apps/v1
kind: StatefulSet
metadata:
  annotations:
    kompose.cmd: kompose convert -c -f ./docker-compose.yaml
    kompose.version: 1.34.0 (HEAD)
  labels:
    io.kompose.service: cop-db
  name: cop-db
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: cop-db
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert -c -f ./docker-compose.yaml
        kompose.version: 1.34.0 (HEAD)
      labels:
        io.kompose.service: cop-db
    spec:
      containers:
        - env:
            - name: POSTGRES_DB
              value: postgres
            - name: POSTGRES_PASSWORD
              value: postgres
            - name: POSTGRES_USER
              value: postgres
            - name: PGUSER
              value: postgres
            - name: PGDATA
              value: /var/lib/postgresql/data/some_data/
          image: {{ .Values.db.image.repo }}/{{ .Values.db.image.name }}:{{ .Values.db.image.tag }}
          volumeMounts:
            - mountPath: /bitnami/postgresql
              name: cop-data
            - mountPath: /scripts
              name: cop-setup-db
          livenessProbe:
            exec:
              command:
                - pg_isready
            failureThreshold: 10
            initialDelaySeconds: 20
            periodSeconds: 5
            timeoutSeconds: 5
          name: cop-db
          ports:
            - containerPort: 5432
              protocol: TCP
      restartPolicy: Always
      volumes:
        - name: cop-setup-db
          configMap: 
            name: cop-setup-db
            items:
              - key: schema.sql
                path: schema.sql
        - name: cop-data
          persistentVolumeClaim:
            claimName: cop-data