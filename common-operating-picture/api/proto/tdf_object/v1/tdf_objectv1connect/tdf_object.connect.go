// Code generated by protoc-gen-connect-go. DO NOT EDIT.
//
// Source: tdf_object/v1/tdf_object.proto

package tdf_objectv1connect

import (
	connect "connectrpc.com/connect"
	context "context"
	errors "errors"
	v1 "github.com/virtru-corp/dsp-cop/api/proto/tdf_object/v1"
	http "net/http"
	strings "strings"
)

// This is a compile-time assertion to ensure that this generated file and the connect package are
// compatible. If you get a compiler error that this constant is not defined, this code was
// generated with a version of connect newer than the one compiled into your binary. You can fix the
// problem by either regenerating this code with an older version of connect or updating the connect
// version compiled into your binary.
const _ = connect.IsAtLeastVersion1_13_0

const (
	// TdfObjectServiceName is the fully-qualified name of the TdfObjectService service.
	TdfObjectServiceName = "tdf_object.v1.TdfObjectService"
)

// These constants are the fully-qualified names of the RPCs defined in this package. They're
// exposed at runtime as Spec.Procedure and as the final two segments of the HTTP route.
//
// Note that these are different from the fully-qualified method names used by
// google.golang.org/protobuf/reflect/protoreflect. To convert from these constants to
// reflection-formatted method names, remove the leading slash and convert the remaining slash to a
// period.
const (
	// TdfObjectServiceCreateTdfObjectProcedure is the fully-qualified name of the TdfObjectService's
	// CreateTdfObject RPC.
	TdfObjectServiceCreateTdfObjectProcedure = "/tdf_object.v1.TdfObjectService/CreateTdfObject"
	// TdfObjectServiceGetTdfObjectProcedure is the fully-qualified name of the TdfObjectService's
	// GetTdfObject RPC.
	TdfObjectServiceGetTdfObjectProcedure = "/tdf_object.v1.TdfObjectService/GetTdfObject"
	// TdfObjectServiceQueryTdfObjectsProcedure is the fully-qualified name of the TdfObjectService's
	// QueryTdfObjects RPC.
	TdfObjectServiceQueryTdfObjectsProcedure = "/tdf_object.v1.TdfObjectService/QueryTdfObjects"
	// TdfObjectServiceStreamTdfObjectsProcedure is the fully-qualified name of the TdfObjectService's
	// StreamTdfObjects RPC.
	TdfObjectServiceStreamTdfObjectsProcedure = "/tdf_object.v1.TdfObjectService/StreamTdfObjects"
	// TdfObjectServiceGetSrcTypeProcedure is the fully-qualified name of the TdfObjectService's
	// GetSrcType RPC.
	TdfObjectServiceGetSrcTypeProcedure = "/tdf_object.v1.TdfObjectService/GetSrcType"
	// TdfObjectServiceListSrcTypesProcedure is the fully-qualified name of the TdfObjectService's
	// ListSrcTypes RPC.
	TdfObjectServiceListSrcTypesProcedure = "/tdf_object.v1.TdfObjectService/ListSrcTypes"
	// TdfObjectServiceGetEntitlementsProcedure is the fully-qualified name of the TdfObjectService's
	// GetEntitlements RPC.
	TdfObjectServiceGetEntitlementsProcedure = "/tdf_object.v1.TdfObjectService/GetEntitlements"
)

// These variables are the protoreflect.Descriptor objects for the RPCs defined in this package.
var (
	tdfObjectServiceServiceDescriptor                = v1.File_tdf_object_v1_tdf_object_proto.Services().ByName("TdfObjectService")
	tdfObjectServiceCreateTdfObjectMethodDescriptor  = tdfObjectServiceServiceDescriptor.Methods().ByName("CreateTdfObject")
	tdfObjectServiceGetTdfObjectMethodDescriptor     = tdfObjectServiceServiceDescriptor.Methods().ByName("GetTdfObject")
	tdfObjectServiceQueryTdfObjectsMethodDescriptor  = tdfObjectServiceServiceDescriptor.Methods().ByName("QueryTdfObjects")
	tdfObjectServiceStreamTdfObjectsMethodDescriptor = tdfObjectServiceServiceDescriptor.Methods().ByName("StreamTdfObjects")
	tdfObjectServiceGetSrcTypeMethodDescriptor       = tdfObjectServiceServiceDescriptor.Methods().ByName("GetSrcType")
	tdfObjectServiceListSrcTypesMethodDescriptor     = tdfObjectServiceServiceDescriptor.Methods().ByName("ListSrcTypes")
	tdfObjectServiceGetEntitlementsMethodDescriptor  = tdfObjectServiceServiceDescriptor.Methods().ByName("GetEntitlements")
)

// TdfObjectServiceClient is a client for the tdf_object.v1.TdfObjectService service.
type TdfObjectServiceClient interface {
	CreateTdfObject(context.Context, *connect.Request[v1.CreateTdfObjectRequest]) (*connect.Response[v1.CreateTdfObjectResponse], error)
	GetTdfObject(context.Context, *connect.Request[v1.GetTdfObjectRequest]) (*connect.Response[v1.GetTdfObjectResponse], error)
	QueryTdfObjects(context.Context, *connect.Request[v1.QueryTdfObjectsRequest]) (*connect.Response[v1.QueryTdfObjectsResponse], error)
	StreamTdfObjects(context.Context, *connect.Request[v1.StreamTdfObjectsRequest]) (*connect.ServerStreamForClient[v1.StreamTdfObjectsResponse], error)
	GetSrcType(context.Context, *connect.Request[v1.GetSrcTypeRequest]) (*connect.Response[v1.GetSrcTypeResponse], error)
	ListSrcTypes(context.Context, *connect.Request[v1.ListSrcTypesRequest]) (*connect.Response[v1.ListSrcTypesResponse], error)
	GetEntitlements(context.Context, *connect.Request[v1.GetEntitlementsRequest]) (*connect.Response[v1.GetEntitlementsResponse], error)
}

// NewTdfObjectServiceClient constructs a client for the tdf_object.v1.TdfObjectService service. By
// default, it uses the Connect protocol with the binary Protobuf Codec, asks for gzipped responses,
// and sends uncompressed requests. To use the gRPC or gRPC-Web protocols, supply the
// connect.WithGRPC() or connect.WithGRPCWeb() options.
//
// The URL supplied here should be the base URL for the Connect or gRPC server (for example,
// http://api.acme.com or https://acme.com/grpc).
func NewTdfObjectServiceClient(httpClient connect.HTTPClient, baseURL string, opts ...connect.ClientOption) TdfObjectServiceClient {
	baseURL = strings.TrimRight(baseURL, "/")
	return &tdfObjectServiceClient{
		createTdfObject: connect.NewClient[v1.CreateTdfObjectRequest, v1.CreateTdfObjectResponse](
			httpClient,
			baseURL+TdfObjectServiceCreateTdfObjectProcedure,
			connect.WithSchema(tdfObjectServiceCreateTdfObjectMethodDescriptor),
			connect.WithClientOptions(opts...),
		),
		getTdfObject: connect.NewClient[v1.GetTdfObjectRequest, v1.GetTdfObjectResponse](
			httpClient,
			baseURL+TdfObjectServiceGetTdfObjectProcedure,
			connect.WithSchema(tdfObjectServiceGetTdfObjectMethodDescriptor),
			connect.WithClientOptions(opts...),
		),
		queryTdfObjects: connect.NewClient[v1.QueryTdfObjectsRequest, v1.QueryTdfObjectsResponse](
			httpClient,
			baseURL+TdfObjectServiceQueryTdfObjectsProcedure,
			connect.WithSchema(tdfObjectServiceQueryTdfObjectsMethodDescriptor),
			connect.WithClientOptions(opts...),
		),
		streamTdfObjects: connect.NewClient[v1.StreamTdfObjectsRequest, v1.StreamTdfObjectsResponse](
			httpClient,
			baseURL+TdfObjectServiceStreamTdfObjectsProcedure,
			connect.WithSchema(tdfObjectServiceStreamTdfObjectsMethodDescriptor),
			connect.WithClientOptions(opts...),
		),
		getSrcType: connect.NewClient[v1.GetSrcTypeRequest, v1.GetSrcTypeResponse](
			httpClient,
			baseURL+TdfObjectServiceGetSrcTypeProcedure,
			connect.WithSchema(tdfObjectServiceGetSrcTypeMethodDescriptor),
			connect.WithClientOptions(opts...),
		),
		listSrcTypes: connect.NewClient[v1.ListSrcTypesRequest, v1.ListSrcTypesResponse](
			httpClient,
			baseURL+TdfObjectServiceListSrcTypesProcedure,
			connect.WithSchema(tdfObjectServiceListSrcTypesMethodDescriptor),
			connect.WithClientOptions(opts...),
		),
		getEntitlements: connect.NewClient[v1.GetEntitlementsRequest, v1.GetEntitlementsResponse](
			httpClient,
			baseURL+TdfObjectServiceGetEntitlementsProcedure,
			connect.WithSchema(tdfObjectServiceGetEntitlementsMethodDescriptor),
			connect.WithClientOptions(opts...),
		),
	}
}

// tdfObjectServiceClient implements TdfObjectServiceClient.
type tdfObjectServiceClient struct {
	createTdfObject  *connect.Client[v1.CreateTdfObjectRequest, v1.CreateTdfObjectResponse]
	getTdfObject     *connect.Client[v1.GetTdfObjectRequest, v1.GetTdfObjectResponse]
	queryTdfObjects  *connect.Client[v1.QueryTdfObjectsRequest, v1.QueryTdfObjectsResponse]
	streamTdfObjects *connect.Client[v1.StreamTdfObjectsRequest, v1.StreamTdfObjectsResponse]
	getSrcType       *connect.Client[v1.GetSrcTypeRequest, v1.GetSrcTypeResponse]
	listSrcTypes     *connect.Client[v1.ListSrcTypesRequest, v1.ListSrcTypesResponse]
	getEntitlements  *connect.Client[v1.GetEntitlementsRequest, v1.GetEntitlementsResponse]
}

// CreateTdfObject calls tdf_object.v1.TdfObjectService.CreateTdfObject.
func (c *tdfObjectServiceClient) CreateTdfObject(ctx context.Context, req *connect.Request[v1.CreateTdfObjectRequest]) (*connect.Response[v1.CreateTdfObjectResponse], error) {
	return c.createTdfObject.CallUnary(ctx, req)
}

// GetTdfObject calls tdf_object.v1.TdfObjectService.GetTdfObject.
func (c *tdfObjectServiceClient) GetTdfObject(ctx context.Context, req *connect.Request[v1.GetTdfObjectRequest]) (*connect.Response[v1.GetTdfObjectResponse], error) {
	return c.getTdfObject.CallUnary(ctx, req)
}

// QueryTdfObjects calls tdf_object.v1.TdfObjectService.QueryTdfObjects.
func (c *tdfObjectServiceClient) QueryTdfObjects(ctx context.Context, req *connect.Request[v1.QueryTdfObjectsRequest]) (*connect.Response[v1.QueryTdfObjectsResponse], error) {
	return c.queryTdfObjects.CallUnary(ctx, req)
}

// StreamTdfObjects calls tdf_object.v1.TdfObjectService.StreamTdfObjects.
func (c *tdfObjectServiceClient) StreamTdfObjects(ctx context.Context, req *connect.Request[v1.StreamTdfObjectsRequest]) (*connect.ServerStreamForClient[v1.StreamTdfObjectsResponse], error) {
	return c.streamTdfObjects.CallServerStream(ctx, req)
}

// GetSrcType calls tdf_object.v1.TdfObjectService.GetSrcType.
func (c *tdfObjectServiceClient) GetSrcType(ctx context.Context, req *connect.Request[v1.GetSrcTypeRequest]) (*connect.Response[v1.GetSrcTypeResponse], error) {
	return c.getSrcType.CallUnary(ctx, req)
}

// ListSrcTypes calls tdf_object.v1.TdfObjectService.ListSrcTypes.
func (c *tdfObjectServiceClient) ListSrcTypes(ctx context.Context, req *connect.Request[v1.ListSrcTypesRequest]) (*connect.Response[v1.ListSrcTypesResponse], error) {
	return c.listSrcTypes.CallUnary(ctx, req)
}

// GetEntitlements calls tdf_object.v1.TdfObjectService.GetEntitlements.
func (c *tdfObjectServiceClient) GetEntitlements(ctx context.Context, req *connect.Request[v1.GetEntitlementsRequest]) (*connect.Response[v1.GetEntitlementsResponse], error) {
	return c.getEntitlements.CallUnary(ctx, req)
}

// TdfObjectServiceHandler is an implementation of the tdf_object.v1.TdfObjectService service.
type TdfObjectServiceHandler interface {
	CreateTdfObject(context.Context, *connect.Request[v1.CreateTdfObjectRequest]) (*connect.Response[v1.CreateTdfObjectResponse], error)
	GetTdfObject(context.Context, *connect.Request[v1.GetTdfObjectRequest]) (*connect.Response[v1.GetTdfObjectResponse], error)
	QueryTdfObjects(context.Context, *connect.Request[v1.QueryTdfObjectsRequest]) (*connect.Response[v1.QueryTdfObjectsResponse], error)
	StreamTdfObjects(context.Context, *connect.Request[v1.StreamTdfObjectsRequest], *connect.ServerStream[v1.StreamTdfObjectsResponse]) error
	GetSrcType(context.Context, *connect.Request[v1.GetSrcTypeRequest]) (*connect.Response[v1.GetSrcTypeResponse], error)
	ListSrcTypes(context.Context, *connect.Request[v1.ListSrcTypesRequest]) (*connect.Response[v1.ListSrcTypesResponse], error)
	GetEntitlements(context.Context, *connect.Request[v1.GetEntitlementsRequest]) (*connect.Response[v1.GetEntitlementsResponse], error)
}

// NewTdfObjectServiceHandler builds an HTTP handler from the service implementation. It returns the
// path on which to mount the handler and the handler itself.
//
// By default, handlers support the Connect, gRPC, and gRPC-Web protocols with the binary Protobuf
// and JSON codecs. They also support gzip compression.
func NewTdfObjectServiceHandler(svc TdfObjectServiceHandler, opts ...connect.HandlerOption) (string, http.Handler) {
	tdfObjectServiceCreateTdfObjectHandler := connect.NewUnaryHandler(
		TdfObjectServiceCreateTdfObjectProcedure,
		svc.CreateTdfObject,
		connect.WithSchema(tdfObjectServiceCreateTdfObjectMethodDescriptor),
		connect.WithHandlerOptions(opts...),
	)
	tdfObjectServiceGetTdfObjectHandler := connect.NewUnaryHandler(
		TdfObjectServiceGetTdfObjectProcedure,
		svc.GetTdfObject,
		connect.WithSchema(tdfObjectServiceGetTdfObjectMethodDescriptor),
		connect.WithHandlerOptions(opts...),
	)
	tdfObjectServiceQueryTdfObjectsHandler := connect.NewUnaryHandler(
		TdfObjectServiceQueryTdfObjectsProcedure,
		svc.QueryTdfObjects,
		connect.WithSchema(tdfObjectServiceQueryTdfObjectsMethodDescriptor),
		connect.WithHandlerOptions(opts...),
	)
	tdfObjectServiceStreamTdfObjectsHandler := connect.NewServerStreamHandler(
		TdfObjectServiceStreamTdfObjectsProcedure,
		svc.StreamTdfObjects,
		connect.WithSchema(tdfObjectServiceStreamTdfObjectsMethodDescriptor),
		connect.WithHandlerOptions(opts...),
	)
	tdfObjectServiceGetSrcTypeHandler := connect.NewUnaryHandler(
		TdfObjectServiceGetSrcTypeProcedure,
		svc.GetSrcType,
		connect.WithSchema(tdfObjectServiceGetSrcTypeMethodDescriptor),
		connect.WithHandlerOptions(opts...),
	)
	tdfObjectServiceListSrcTypesHandler := connect.NewUnaryHandler(
		TdfObjectServiceListSrcTypesProcedure,
		svc.ListSrcTypes,
		connect.WithSchema(tdfObjectServiceListSrcTypesMethodDescriptor),
		connect.WithHandlerOptions(opts...),
	)
	tdfObjectServiceGetEntitlementsHandler := connect.NewUnaryHandler(
		TdfObjectServiceGetEntitlementsProcedure,
		svc.GetEntitlements,
		connect.WithSchema(tdfObjectServiceGetEntitlementsMethodDescriptor),
		connect.WithHandlerOptions(opts...),
	)
	return "/tdf_object.v1.TdfObjectService/", http.HandlerFunc(func(w http.ResponseWriter, r *http.Request) {
		switch r.URL.Path {
		case TdfObjectServiceCreateTdfObjectProcedure:
			tdfObjectServiceCreateTdfObjectHandler.ServeHTTP(w, r)
		case TdfObjectServiceGetTdfObjectProcedure:
			tdfObjectServiceGetTdfObjectHandler.ServeHTTP(w, r)
		case TdfObjectServiceQueryTdfObjectsProcedure:
			tdfObjectServiceQueryTdfObjectsHandler.ServeHTTP(w, r)
		case TdfObjectServiceStreamTdfObjectsProcedure:
			tdfObjectServiceStreamTdfObjectsHandler.ServeHTTP(w, r)
		case TdfObjectServiceGetSrcTypeProcedure:
			tdfObjectServiceGetSrcTypeHandler.ServeHTTP(w, r)
		case TdfObjectServiceListSrcTypesProcedure:
			tdfObjectServiceListSrcTypesHandler.ServeHTTP(w, r)
		case TdfObjectServiceGetEntitlementsProcedure:
			tdfObjectServiceGetEntitlementsHandler.ServeHTTP(w, r)
		default:
			http.NotFound(w, r)
		}
	})
}

// UnimplementedTdfObjectServiceHandler returns CodeUnimplemented from all methods.
type UnimplementedTdfObjectServiceHandler struct{}

func (UnimplementedTdfObjectServiceHandler) CreateTdfObject(context.Context, *connect.Request[v1.CreateTdfObjectRequest]) (*connect.Response[v1.CreateTdfObjectResponse], error) {
	return nil, connect.NewError(connect.CodeUnimplemented, errors.New("tdf_object.v1.TdfObjectService.CreateTdfObject is not implemented"))
}

func (UnimplementedTdfObjectServiceHandler) GetTdfObject(context.Context, *connect.Request[v1.GetTdfObjectRequest]) (*connect.Response[v1.GetTdfObjectResponse], error) {
	return nil, connect.NewError(connect.CodeUnimplemented, errors.New("tdf_object.v1.TdfObjectService.GetTdfObject is not implemented"))
}

func (UnimplementedTdfObjectServiceHandler) QueryTdfObjects(context.Context, *connect.Request[v1.QueryTdfObjectsRequest]) (*connect.Response[v1.QueryTdfObjectsResponse], error) {
	return nil, connect.NewError(connect.CodeUnimplemented, errors.New("tdf_object.v1.TdfObjectService.QueryTdfObjects is not implemented"))
}

func (UnimplementedTdfObjectServiceHandler) StreamTdfObjects(context.Context, *connect.Request[v1.StreamTdfObjectsRequest], *connect.ServerStream[v1.StreamTdfObjectsResponse]) error {
	return connect.NewError(connect.CodeUnimplemented, errors.New("tdf_object.v1.TdfObjectService.StreamTdfObjects is not implemented"))
}

func (UnimplementedTdfObjectServiceHandler) GetSrcType(context.Context, *connect.Request[v1.GetSrcTypeRequest]) (*connect.Response[v1.GetSrcTypeResponse], error) {
	return nil, connect.NewError(connect.CodeUnimplemented, errors.New("tdf_object.v1.TdfObjectService.GetSrcType is not implemented"))
}

func (UnimplementedTdfObjectServiceHandler) ListSrcTypes(context.Context, *connect.Request[v1.ListSrcTypesRequest]) (*connect.Response[v1.ListSrcTypesResponse], error) {
	return nil, connect.NewError(connect.CodeUnimplemented, errors.New("tdf_object.v1.TdfObjectService.ListSrcTypes is not implemented"))
}

func (UnimplementedTdfObjectServiceHandler) GetEntitlements(context.Context, *connect.Request[v1.GetEntitlementsRequest]) (*connect.Response[v1.GetEntitlementsResponse], error) {
	return nil, connect.NewError(connect.CodeUnimplemented, errors.New("tdf_object.v1.TdfObjectService.GetEntitlements is not implemented"))
}
