name: üì¶ Publish Release

on:
  push:
    branches:
      - main

permissions:
  contents: write
  packages: write
  id-token: write

jobs:
  publish-release:
    runs-on: ubuntu-latest

    # timeout-minutes: 45
    steps:
        - name: Check out repository
          uses: actions/checkout@v4
          with:
            persist-credentials: true

        - name: Set GIT_SHA and VERSION environment variables
          run: |
            echo "GIT_SHA=sha-$(git rev-parse --short HEAD)" >> "$GITHUB_ENV"
            echo "VERSION=$(make version | sed 's/[^a-zA-Z0-9._-]//g')" >> "$GITHUB_ENV"

        - name: Set RELEASE_TAG environment variable
          run: |
            echo "RELEASE_TAG=${{ env.VERSION }}" >> "$GITHUB_ENV"

        - name: 'Set Virtru-specific output parameter values'
          id: 'virtru-values'
          uses: virtru-corp/.github/virtru-actions/misc-actions/virtru-values@v1

        - name: 'Authenticate to Google Cloud'
          id: 'gcp-auth'
          uses: google-github-actions/auth@55bd3a7c6e2ae7cf1877fd1ccb9d54c0503c457c # v2.1.2
          with:
            workload_identity_provider: 'projects/1053957112592/locations/global/workloadIdentityPools/github-actions-oidc-pool/providers/github-actions-oidc-provider'
            service_account: 'github-actions-sa@prj-infra-automation-ktbz.iam.gserviceaccount.com'
            create_credentials_file: false
            token_format: "access_token"

        - name: 'Docker login to Artifact Registry'
          uses: docker/login-action@9780b0c442fbb1117ed29e0efdff1e18412f7567 # v3.3.0
          with:
            registry: us-east4-docker.pkg.dev
            username: oauth2accesstoken
            password: ${{ steps.gcp-auth.outputs.access_token }}

        - name: Set up QEMU
          uses: docker/setup-qemu-action@2b82ce82d56a2a04d2637cd93a637ae1b359c0a7 # v2.2.0

        - name: Set up Docker Buildx
          uses: docker/setup-buildx-action@b5ca514318bd6ebac0fb2aedd5d36ec1b5c232a2 # v3.10.0
          with:
            cache-binary: false

        - name: Login to GitHub Container Registry
          uses: docker/login-action@465a07811f14bebb1938fbed4728c6a1ff8901fc # v2.2.0
          with:
            registry: ghcr.io
            username: virtru-cloudnative
            password: ${{ secrets.GITHUB_TOKEN  }}

        # Push to Github ('ghcr.io') and Google Cloud ('pkg.dev')
        #
        # Documentation is available at:
        #   https://docs.docker.com/build/ci/github-actions/push-multi-registries/
        - name: üèóÔ∏è Build and Push Container Image
          uses: docker/build-push-action@67a2d409c0a876cbe6b11854e3e25193efe4e62d # v6.12.0
          with:
            platforms: linux/amd64,linux/arm64
            file: "./cop.Dockerfile"
            push: true
            tags: |
              ghcr.io/virtru-corp/dsp-cop/cop-web-server:${{ env.RELEASE_TAG }}
              ghcr.io/virtru-corp/dsp-cop/cop-web-server:latest
            # NOTE: MIC-2028 disabled the push to Google Cloud ('pkg.dev')
            # due to authentication issues. This push did work previously.
            #   us-east4-docker.pkg.dev/prj-sb-engineering-nerq/fed-sandbox/cop-web-server:${{ env.RELEASE_TAG }}
            #   us-east4-docker.pkg.dev/prj-sb-engineering-nerq/fed-sandbox/cop-web-server:latest

        - name: Prepare Docker Deployment Assets
          shell: bash
          run: |
            ./.github/scripts/prepare-docker-artifacts.sh "${{ env.RELEASE_TAG }}"

        - name: Prepare Helm Deployment Assets
          run: |
            ./.github/scripts/prepare-helm-artifacts.sh "${{ env.RELEASE_TAG }}"

        # Reference: https://github.com/ncipollo/release-action
        - name: Create Release Snapshot
          uses: ncipollo/release-action@cdcc88a9acf3ca41c16c37bb7d21b9ad48560d87 # v1.15.0
          with:
            artifacts: |
              dspcop-docker-${{ env.RELEASE_TAG }}.zip,
              dspcop-helm-${{ env.RELEASE_TAG }}.zip
            body: |
              DSP COP ${{ env.RELEASE_TAG }}

              `docker pull ghcr.io/virtru-corp/dsp-cop/cop-web-server:${{ env.RELEASE_TAG }}`

              `docker pull ghcr.io/virtru-corp/dsp-cop/cop-web-server:latest`

              To deploy COP to docker, use the docker release artifact:
                - `dspcop-docker-${{ env.RELEASE_TAG }}.zip`

              To deploy COP to Kubernetes, use the helm release artifact:
                - `dspcop-helm-${{ env.RELEASE_TAG }}.zip`
            generateReleaseNotes: true
            prerelease: false
            tag: ${{ env.RELEASE_TAG }}

